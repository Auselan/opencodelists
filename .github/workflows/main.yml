---
name: CI

on:
  push:

jobs:
  install-py:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.6"
      - name: "Install dependencies"
        run: |
          set -xe
          python -m pip install --upgrade pip
          python -m venv venv
          venv/bin/pip install --progress-bar=off --requirement requirements.txt
      - name: Cache the venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt') }}

  format-py:
    needs: install-py
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.6"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt') }}
      - run: ls -lah ${{ github.workspace }}
      - name: Check formatting
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          make format-py

  lint-py:
    needs: install-py
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.6"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt') }}
      - name: Check linting
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          make lint-py

  sort:
    needs: install-py
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.6"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt') }}
      - name: Check import sorting
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          make sort

  test-py:
    needs: [format-py, lint-py, sort]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: "actions/setup-python@v2"
        with:
          python-version: "3.6"
      - name: Use the cached venv
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/venv
          key: venv-${{ github.ref }}-${{ hashFiles('requirements.txt') }}
      - name: Run tests
        run: |
          source ${{ github.workspace }}/venv/bin/activate
          make test-py

  install-js:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: install-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            install-${{ env.cache-name }}-
            install-
      - name: Install dependencies
        run: npm install

  format-js:
    needs: [install-js]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: install-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: make format-js

  lint-js:
    needs: [install-js]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: install-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: make lint-js

  test-js:
    needs: [format-js, lint-js]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: install-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: make test-js

  build-js:
    needs: [format-js, lint-js]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: install-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: make build-js

  build-dev-js:
    needs: [format-js, lint-js]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: install-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      - run: make build-dev-js

  lint-sh:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './scripts'
