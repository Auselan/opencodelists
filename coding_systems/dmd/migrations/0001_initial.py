# Generated by Django 3.1.3 on 2020-11-06 16:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AMP",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="apid",
                        help_text="Identifier",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("nm", models.CharField(help_text="Name", max_length=255)),
                (
                    "abbrevnm",
                    models.CharField(
                        help_text="Abbreviated name", max_length=60, null=True
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=700)),
                (
                    "nmdt",
                    models.DateField(help_text="Date of name applicability", null=True),
                ),
                (
                    "nm_prev",
                    models.CharField(
                        help_text="Previous name", max_length=255, null=True
                    ),
                ),
                (
                    "lic_authchangedt",
                    models.DateField(
                        help_text="Date of change of licensing authority", null=True
                    ),
                ),
                ("ema", models.BooleanField(help_text="EMA additional monitoring")),
                ("parallel_import", models.BooleanField(help_text="Parallel import")),
                (
                    "bnf_code",
                    models.CharField(help_text="BNF code", max_length=15, null=True),
                ),
            ],
            options={
                "verbose_name": "Actual Medicinal Product",
                "ordering": ["descr"],
            },
        ),
        migrations.CreateModel(
            name="AMPP",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="appid",
                        help_text="Identifier",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("nm", models.CharField(help_text="Description", max_length=774)),
                (
                    "abbrevnm",
                    models.CharField(
                        help_text="Abbreviated name", max_length=60, null=True
                    ),
                ),
                (
                    "subp",
                    models.CharField(
                        help_text="Sub pack info", max_length=30, null=True
                    ),
                ),
                (
                    "discdt",
                    models.DateField(help_text="Discontinued change date", null=True),
                ),
                (
                    "bnf_code",
                    models.CharField(help_text="BNF code", max_length=15, null=True),
                ),
                (
                    "amp",
                    models.ForeignKey(
                        db_column="apid",
                        help_text="AMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.amp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Actual Medicinal Product Pack",
                "ordering": ["nm"],
            },
        ),
        migrations.CreateModel(
            name="AvailabilityRestriction",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="BasisOfName",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="BasisOfStrnth",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="Colour",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="CombinationPackInd",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="CombinationProdInd",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="ControlDrugCategory",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="DfIndicator",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="DiscontinuedInd",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="Dnd",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="DtPaymentCategory",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="Flavour",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="Form",
            fields=[
                (
                    "cd",
                    models.CharField(
                        help_text="Code",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cddt",
                    models.DateField(
                        help_text="Date code is applicable from", null=True
                    ),
                ),
                (
                    "cdprev",
                    models.CharField(
                        help_text="Previous code", max_length=18, null=True
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="Ing",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="isid",
                        help_text="Identifier",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "isiddt",
                    models.DateField(
                        help_text="Date identifier became valid", null=True
                    ),
                ),
                (
                    "isidprev",
                    models.CharField(
                        help_text="Previous identifier", max_length=18, null=True
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("nm", models.CharField(help_text="Name", max_length=255)),
            ],
            options={
                "verbose_name": "Ingredients",
            },
        ),
        migrations.CreateModel(
            name="LegalCategory",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="LicensingAuthority",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="LicensingAuthorityChangeReason",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="NamechangeReason",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="OntFormRoute",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="PriceBasis",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="ReimbursementStatus",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="Route",
            fields=[
                (
                    "cd",
                    models.CharField(
                        help_text="Code",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cddt",
                    models.DateField(
                        help_text="Date code is applicable from", null=True
                    ),
                ),
                (
                    "cdprev",
                    models.CharField(
                        help_text="Previous code", max_length=18, null=True
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="SpecCont",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "cd",
                    models.CharField(
                        help_text="Code",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cddt",
                    models.DateField(
                        help_text="Date code is applicable from", null=True
                    ),
                ),
                (
                    "cdprev",
                    models.CharField(
                        help_text="Previous code", max_length=18, null=True
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("descr", models.CharField(help_text="Description", max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name="UnitOfMeasure",
            fields=[
                (
                    "cd",
                    models.CharField(
                        help_text="Code",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "cddt",
                    models.DateField(
                        help_text="Date code is applicable from", null=True
                    ),
                ),
                (
                    "cdprev",
                    models.CharField(
                        help_text="Previous code", max_length=18, null=True
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="VirtualProductNonAvail",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="VirtualProductPresStatus",
            fields=[
                (
                    "cd",
                    models.IntegerField(
                        help_text="Code", primary_key=True, serialize=False
                    ),
                ),
                ("descr", models.CharField(help_text="Description", max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name="VMP",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="vpid",
                        help_text="Identifier",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "vpiddt",
                    models.DateField(
                        help_text="Date identifier became valid", null=True
                    ),
                ),
                (
                    "vpidprev",
                    models.CharField(
                        help_text="Previous product identifier",
                        max_length=18,
                        null=True,
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("nm", models.CharField(help_text="Name", max_length=255)),
                (
                    "abbrevnm",
                    models.CharField(
                        help_text="Abbreviated name", max_length=60, null=True
                    ),
                ),
                (
                    "nmdt",
                    models.DateField(help_text="Date of name applicability", null=True),
                ),
                (
                    "nmprev",
                    models.CharField(
                        help_text="Previous name", max_length=255, null=True
                    ),
                ),
                ("sug_f", models.BooleanField(help_text="Sugar free")),
                ("glu_f", models.BooleanField(help_text="Gluten free")),
                ("pres_f", models.BooleanField(help_text="Preservative free")),
                ("cfc_f", models.BooleanField(help_text="CFC free")),
                (
                    "non_availdt",
                    models.DateField(
                        help_text="Non-availability status date", null=True
                    ),
                ),
                (
                    "udfs",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Unit dose form size",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "basis",
                    models.ForeignKey(
                        db_column="basiscd",
                        help_text="Basis of preferred name",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.basisofname",
                    ),
                ),
                (
                    "basis_prev",
                    models.ForeignKey(
                        db_column="basis_prevcd",
                        help_text="Basis of previous name",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.basisofname",
                    ),
                ),
                (
                    "combprod",
                    models.ForeignKey(
                        db_column="combprodcd",
                        help_text="Combination product",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.combinationprodind",
                    ),
                ),
                (
                    "df_ind",
                    models.ForeignKey(
                        db_column="df_indcd",
                        help_text="Dose form",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.dfindicator",
                    ),
                ),
                (
                    "nmchange",
                    models.ForeignKey(
                        db_column="nmchangecd",
                        help_text="Reason for name change",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.namechangereason",
                    ),
                ),
                (
                    "non_avail",
                    models.ForeignKey(
                        db_column="non_availcd",
                        help_text="Non-availability",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.virtualproductnonavail",
                    ),
                ),
                (
                    "pres_stat",
                    models.ForeignKey(
                        db_column="pres_statcd",
                        help_text="Prescribing status",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.virtualproductpresstatus",
                    ),
                ),
                (
                    "udfs_uom",
                    models.ForeignKey(
                        db_column="udfs_uomcd",
                        help_text="Unit dose form units",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.unitofmeasure",
                    ),
                ),
                (
                    "unit_dose_uom",
                    models.ForeignKey(
                        db_column="unit_dose_uomcd",
                        help_text="Unit dose unit of measure",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.unitofmeasure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Virtual Medicinal Product",
                "ordering": ["nm"],
            },
        ),
        migrations.CreateModel(
            name="VTM",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="vtmid",
                        help_text="Identifier",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("nm", models.CharField(help_text="Name", max_length=255)),
                (
                    "abbrevnm",
                    models.CharField(
                        help_text="Abbreviated name", max_length=60, null=True
                    ),
                ),
                (
                    "vtmidprev",
                    models.CharField(
                        help_text="Previous identifier", max_length=18, null=True
                    ),
                ),
                (
                    "vtmiddt",
                    models.DateField(help_text="VTM identifier date", null=True),
                ),
            ],
            options={
                "verbose_name": "Virtual Therapeutic Moiety",
                "verbose_name_plural": "Virtual Therapeutic Moieties",
                "ordering": ["nm"],
            },
        ),
        migrations.CreateModel(
            name="VPI",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bs_subid",
                    models.CharField(
                        help_text="Basis of strength substance identifier",
                        max_length=18,
                        null=True,
                    ),
                ),
                (
                    "strnt_nmrtr_val",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Strength value numerator",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "strnt_dnmtr_val",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Strength value denominator",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "basis_strnt",
                    models.ForeignKey(
                        db_column="basis_strntcd",
                        help_text="Basis of pharmaceutical strength",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.basisofstrnth",
                    ),
                ),
                (
                    "ing",
                    models.ForeignKey(
                        db_column="isid",
                        help_text="Ingredient",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ing",
                    ),
                ),
                (
                    "strnt_dnmtr_uom",
                    models.ForeignKey(
                        db_column="strnt_dnmtr_uomcd",
                        help_text="Strength value denominator unit",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.unitofmeasure",
                    ),
                ),
                (
                    "strnt_nmrtr_uom",
                    models.ForeignKey(
                        db_column="strnt_nmrtr_uomcd",
                        help_text="Strength value numerator unit",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.unitofmeasure",
                    ),
                ),
                (
                    "vmp",
                    models.ForeignKey(
                        db_column="vpid",
                        help_text="VMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Virtual Product Ingredient",
            },
        ),
        migrations.CreateModel(
            name="VMPP",
            fields=[
                (
                    "id",
                    models.CharField(
                        db_column="vppid",
                        help_text="Identifier",
                        max_length=18,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invalid", models.BooleanField(help_text="Invalid")),
                ("nm", models.CharField(help_text="Description", max_length=420)),
                (
                    "qtyval",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Quantity value",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "bnf_code",
                    models.CharField(help_text="BNF code", max_length=15, null=True),
                ),
                (
                    "combpack",
                    models.ForeignKey(
                        db_column="combpackcd",
                        help_text="Combination pack",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.combinationpackind",
                    ),
                ),
                (
                    "qty_uom",
                    models.ForeignKey(
                        db_column="qty_uomcd",
                        help_text="Quantity unit of measure",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.unitofmeasure",
                    ),
                ),
                (
                    "vmp",
                    models.ForeignKey(
                        db_column="vpid",
                        help_text="VMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Virtual Medicinal Product Pack",
                "ordering": ["nm"],
            },
        ),
        migrations.AddField(
            model_name="vmp",
            name="vtm",
            field=models.ForeignKey(
                db_column="vtmid",
                help_text="VTM",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.vtm",
            ),
        ),
        migrations.CreateModel(
            name="ReimbInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "px_chrgs",
                    models.IntegerField(help_text="Prescription charges", null=True),
                ),
                (
                    "disp_fees",
                    models.IntegerField(help_text="Dispensing fees", null=True),
                ),
                ("bb", models.BooleanField(help_text="Broken bulk")),
                ("cal_pack", models.BooleanField(help_text="Calendar pack")),
                ("fp34d", models.BooleanField(help_text="FP34D prescription item")),
                (
                    "ampp",
                    models.OneToOneField(
                        db_column="appid",
                        help_text="AMPP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ampp",
                    ),
                ),
                (
                    "dnd",
                    models.ForeignKey(
                        db_column="dndcd",
                        help_text="Discount not deducted",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.dnd",
                    ),
                ),
                (
                    "spec_cont",
                    models.ForeignKey(
                        db_column="spec_contcd",
                        help_text="Special container",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.speccont",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reimbursement Information",
            },
        ),
        migrations.CreateModel(
            name="PriceInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.IntegerField(help_text="Price", null=True)),
                (
                    "pricedt",
                    models.DateField(help_text="Date of price validity", null=True),
                ),
                (
                    "price_prev",
                    models.IntegerField(
                        help_text="Price prior to change date", null=True
                    ),
                ),
                (
                    "ampp",
                    models.OneToOneField(
                        db_column="appid",
                        help_text="AMPP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ampp",
                    ),
                ),
                (
                    "price_basis",
                    models.ForeignKey(
                        db_column="price_basiscd",
                        help_text="Price basis",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.pricebasis",
                    ),
                ),
            ],
            options={
                "verbose_name": "Medicinal Product Price",
            },
        ),
        migrations.CreateModel(
            name="PrescribInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sched_2", models.BooleanField(help_text="Schedule 2")),
                ("acbs", models.BooleanField(help_text="ACBS")),
                ("padm", models.BooleanField(help_text="Personally administered")),
                ("fp10_mda", models.BooleanField(help_text="FP10 MDA Prescription")),
                ("sched_1", models.BooleanField(help_text="Schedule 1")),
                ("hosp", models.BooleanField(help_text="Hospital")),
                ("nurse_f", models.BooleanField(help_text="Nurse formulary")),
                ("enurse_f", models.BooleanField(help_text="Nurse extended formulary")),
                ("dent_f", models.BooleanField(help_text="Dental formulary")),
                (
                    "ampp",
                    models.OneToOneField(
                        db_column="appid",
                        help_text="AMPP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ampp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Product Prescribing Information",
            },
        ),
        migrations.CreateModel(
            name="PackInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reimb_statdt",
                    models.DateField(
                        help_text="Date appliance reimbursement status became effective",
                        null=True,
                    ),
                ),
                (
                    "pack_order_no",
                    models.CharField(
                        help_text="Pack order number", max_length=20, null=True
                    ),
                ),
                (
                    "ampp",
                    models.OneToOneField(
                        db_column="appid",
                        help_text="AMPP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ampp",
                    ),
                ),
                (
                    "reimb_stat",
                    models.ForeignKey(
                        db_column="reimb_statcd",
                        help_text="Appliance reimbursement status",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.reimbursementstatus",
                    ),
                ),
                (
                    "reimb_statprev",
                    models.ForeignKey(
                        db_column="reimb_statprevcd",
                        help_text="Appliance reimbursement previous status",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.reimbursementstatus",
                    ),
                ),
            ],
            options={
                "verbose_name": "Appliance Pack Information",
            },
        ),
        migrations.CreateModel(
            name="Ont",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "form",
                    models.ForeignKey(
                        db_column="formcd",
                        help_text="Form & Route",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ontformroute",
                    ),
                ),
                (
                    "vmp",
                    models.ForeignKey(
                        db_column="vpid",
                        help_text="VMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ontology Drug Form & Route",
            },
        ),
        migrations.CreateModel(
            name="LicRoute",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amp",
                    models.ForeignKey(
                        db_column="apid",
                        help_text="AMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.amp",
                    ),
                ),
                (
                    "route",
                    models.ForeignKey(
                        db_column="routecd",
                        help_text="Licenced route",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.route",
                    ),
                ),
            ],
            options={
                "verbose_name": "Licensed Route",
            },
        ),
        migrations.CreateModel(
            name="GTIN",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gtin", models.CharField(help_text="GTIN", max_length=18)),
                ("startdt", models.DateField(help_text="GTIN date")),
                (
                    "enddt",
                    models.DateField(
                        help_text="The date the GTIN became invalid", null=True
                    ),
                ),
                (
                    "ampp",
                    models.OneToOneField(
                        db_column="appid",
                        help_text="AMPP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ampp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Global Trade Item Number",
            },
        ),
        migrations.CreateModel(
            name="Dtinfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "price",
                    models.IntegerField(help_text="Drug Tariff price", null=True),
                ),
                (
                    "dt",
                    models.DateField(help_text="Date from which applicable", null=True),
                ),
                (
                    "prevprice",
                    models.IntegerField(help_text="Previous price", null=True),
                ),
                (
                    "pay_cat",
                    models.ForeignKey(
                        db_column="pay_catcd",
                        help_text="Drug Tariff payment category",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.dtpaymentcategory",
                    ),
                ),
                (
                    "vmpp",
                    models.OneToOneField(
                        db_column="vppid",
                        help_text="VMPP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmpp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Drug Tariff Category Information",
            },
        ),
        migrations.CreateModel(
            name="Droute",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "route",
                    models.ForeignKey(
                        db_column="routecd",
                        help_text="Route",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.route",
                    ),
                ),
                (
                    "vmp",
                    models.ForeignKey(
                        db_column="vpid",
                        help_text="VMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Drug Route",
            },
        ),
        migrations.CreateModel(
            name="Dform",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "form",
                    models.ForeignKey(
                        db_column="formcd",
                        help_text="Formulation",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.form",
                    ),
                ),
                (
                    "vmp",
                    models.OneToOneField(
                        db_column="vpid",
                        help_text="VMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Dose Form",
            },
        ),
        migrations.CreateModel(
            name="ControlInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "catdt",
                    models.DateField(help_text="Date of applicability", null=True),
                ),
                (
                    "cat",
                    models.ForeignKey(
                        db_column="catcd",
                        help_text="Controlled Drug category",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.controldrugcategory",
                    ),
                ),
                (
                    "cat_prev",
                    models.ForeignKey(
                        db_column="cat_prevcd",
                        help_text="Previous Controlled Drug information",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.controldrugcategory",
                    ),
                ),
                (
                    "vmp",
                    models.OneToOneField(
                        db_column="vpid",
                        help_text="VMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.vmp",
                    ),
                ),
            ],
            options={
                "verbose_name": "Controlled Drug Prescribing Information",
            },
        ),
        migrations.CreateModel(
            name="ApIng",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "strnth",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Pharmaceutical strength numerical value",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "amp",
                    models.ForeignKey(
                        db_column="apid",
                        help_text="AMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.amp",
                    ),
                ),
                (
                    "ing",
                    models.ForeignKey(
                        db_column="isid",
                        help_text="Ingredient",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.ing",
                    ),
                ),
                (
                    "uom",
                    models.ForeignKey(
                        db_column="uomcd",
                        help_text="Pharmaceutical Strength Unit of Measure",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="dmd.unitofmeasure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Excipients",
            },
        ),
        migrations.CreateModel(
            name="ApInfo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sz_weight",
                    models.CharField(
                        help_text="Size / weight", max_length=100, null=True
                    ),
                ),
                (
                    "prod_order_no",
                    models.CharField(
                        help_text="Product order number", max_length=20, null=True
                    ),
                ),
                (
                    "amp",
                    models.OneToOneField(
                        db_column="apid",
                        help_text="AMP",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.amp",
                    ),
                ),
                (
                    "colour",
                    models.ForeignKey(
                        db_column="colourcd",
                        help_text="Colour",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dmd.colour",
                    ),
                ),
            ],
            options={
                "verbose_name": "Appliance Product Information",
            },
        ),
        migrations.AddField(
            model_name="ampp",
            name="combpack",
            field=models.ForeignKey(
                db_column="combpackcd",
                help_text="Combination pack",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.combinationpackind",
            ),
        ),
        migrations.AddField(
            model_name="ampp",
            name="disc",
            field=models.ForeignKey(
                db_column="disccd",
                help_text="Discontinued",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.discontinuedind",
            ),
        ),
        migrations.AddField(
            model_name="ampp",
            name="legal_cat",
            field=models.ForeignKey(
                db_column="legal_catcd",
                help_text="Legal category",
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.legalcategory",
            ),
        ),
        migrations.AddField(
            model_name="ampp",
            name="vmpp",
            field=models.ForeignKey(
                db_column="vppid",
                help_text="VMPP",
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.vmpp",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="avail_restrict",
            field=models.ForeignKey(
                db_column="avail_restrictcd",
                help_text="Restrictions on availability",
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.availabilityrestriction",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="combprod",
            field=models.ForeignKey(
                db_column="combprodcd",
                help_text="Combination product",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.combinationprodind",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="flavour",
            field=models.ForeignKey(
                db_column="flavourcd",
                help_text="Flavour",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.flavour",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="lic_auth",
            field=models.ForeignKey(
                db_column="lic_authcd",
                help_text="Current licensing authority",
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.licensingauthority",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="lic_auth_prev",
            field=models.ForeignKey(
                db_column="lic_auth_prevcd",
                help_text="Previous licensing authority",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="dmd.licensingauthority",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="lic_authchange",
            field=models.ForeignKey(
                db_column="lic_authchangecd",
                help_text="Reason for change of licensing authority",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.licensingauthoritychangereason",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="supp",
            field=models.ForeignKey(
                db_column="suppcd",
                help_text="Supplier",
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.supplier",
            ),
        ),
        migrations.AddField(
            model_name="amp",
            name="vmp",
            field=models.ForeignKey(
                db_column="vpid",
                help_text="VMP",
                on_delete=django.db.models.deletion.CASCADE,
                to="dmd.vmp",
            ),
        ),
    ]
